# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wXM96wA9cH81JVsJYs9xid_tCpr5z_RU
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/drive/MyDrive/Earthquakes_database.csv')
df.head()

# ავირჩიე პირველი 100 სტრიქონი და შესაბამისი სვეტები

df = df.loc[:99, ['Date', 'Time', 'Latitude', 'Longitude', 'Type', 'Depth', 'Depth Error', 'Magnitude']]




# ვუზრუნველყავი 'Date' სვეტის უნიკალურობა 'Time'-თან კომბინაციით
df['DateTime'] = df['Date'] + ' ' + df['Time']



# თავდაპირველი 'Date' და 'Time' სვეტების წაშლა
df = df.drop(columns=['Date', 'Time'])

# მონაცემების წმენდა
# შევავსე 'Depth', 'Magnitude' და 'Depth Error' სვეტებში არსებულ სიცარიელეები საშუალო მნიშვნელობით
df['Depth'] = df['Depth'].fillna(df['Depth'].mean())
df['Magnitude'] = df['Magnitude'].fillna(df['Magnitude'].mean())
df['Depth Error'] = df['Depth Error'].fillna(df['Depth Error'].mean())

# შევქმენი ახალი სვეტი რომელიც მიუთითებს მნიშვნელოვან სიღრმეზე
df['Significant_Depth'] = df['Depth'] > 70

# კატეგორიული სვეტის 'Magnitude' ციფრული ველის კატეგორიზაცია cut ფუნქციის გამოყენებით
bins = [0, 4, 6, 10]
labels = ['Low', 'Medium', 'High']
df['Magnitude_Category'] = pd.cut(df['Magnitude'], bins=bins, labels=labels)

# მონაცემების ტრანსფორმაცია stack და unstack ფუნქციების გამოყენებით
stacked_df = df.stack()
unstacked_df = stacked_df.unstack()

# მონაცემების ტრანსფორმაცია melt ფუნქციის გამოყენებით
melted_df = df.melt(id_vars=['DateTime'], value_vars=['Magnitude', 'Depth'])

# ვიზუალიზაციების შექმნა
plt.figure(figsize=(14, 10))

# ხაზოვანი დიაგრამა
plt.subplot(2, 2, 1)
plt.plot(df['DateTime'], df['Magnitude'])
plt.title('Line Chart of Magnitude over Time')
plt.xlabel('DateTime')
plt.ylabel('Magnitude')

# სვეტების დიაგრამა
plt.subplot(2, 2, 2)
sns.barplot(x='Magnitude_Category', y='Depth', data=df)
plt.title('Bar Chart of Depth by Magnitude Category')
plt.xlabel('Magnitude Category')
plt.ylabel('Depth')

# წერტილების დიაგრამა
plt.subplot(2, 2, 3)
plt.scatter(df['Longitude'], df['Latitude'], c=df['Magnitude'], cmap='viridis')
plt.colorbar(label='Magnitude')
plt.title('Scatter Plot of Earthquake Locations')
plt.xlabel('Longitude')
plt.ylabel('Latitude')

# ჰისტოგრამა
plt.subplot(2, 2, 4)
plt.hist(df['Magnitude'], bins=10, edgecolor='black')
plt.title('Histogram of Magnitude')
plt.xlabel('Magnitude')
plt.ylabel('Frequency')

plt.tight_layout()
plt.show()

